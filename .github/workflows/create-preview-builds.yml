name: Preview Builds (Vercel + EAS)
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - main

jobs:
  deploy_to_vercel:
    name: Deploy Collector Console to Vercel
    runs-on: ubuntu-latest

    outputs:
      preview_url: ${{ steps.set_url.outputs.preview_url }}

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.4.1

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: apps/collector-console
        run: vercel pull --yes  --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: apps/collector-console
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} --cwd=apps/collector-console

      - name: Deploy & Alias
        id: set_url
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}) --cwd=apps/collector-console
          echo "Deployment URL: $DEPLOYMENT_URL"

          # Create alias like: collector-console--feature-branch-name.vercel.app
          ALIAS_URL="https://collector-console--${{ github.head_ref }}.vercel.app"
          vercel alias $DEPLOYMENT_URL collector-console--${{ github.head_ref }}.vercel.app --token=${{ secrets.VERCEL_TOKEN }}

          echo "preview_url=$ALIAS_URL" >> $GITHUB_OUTPUT

  eas_build_or_update:
    name: EAS Build or Update
    needs: deploy_to_vercel
    runs-on: ubuntu-latest

    env:
      EXPO_PUBLIC_SERVER_URL: ${{ needs.deploy_to_vercel.outputs.preview_url }}
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Decide Build or Update
        id: build_type
        run: |
          # Create a flag file if this is the first run for the branch
          CACHE_DIR=".eas-cache"
          FLAG_FILE="$CACHE_DIR/${{ github.head_ref }}.built"

          mkdir -p $CACHE_DIR

          if [ -f "$FLAG_FILE" ]; then
            echo "This branch has already been built. Will run update."
            echo "action=update" >> $GITHUB_OUTPUT
          else
            echo "First build for this branch."
            echo "action=build" >> $GITHUB_OUTPUT
            touch "$FLAG_FILE"
          fi

      - name: EAS Build
        working-directory: apps/mobile
        if: steps.build_type.outputs.action == 'build'
        run: |
          eas build --platform android --profile preview --non-interactive --channel=${{ github.head_ref }}

      - name: EAS Update
        working-directory: apps/mobile
        if: steps.build_type.outputs.action == 'update'
        run: |
          eas update --branch=${{ github.head_ref }} --platform android
